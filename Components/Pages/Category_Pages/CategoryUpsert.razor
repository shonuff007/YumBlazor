@page "/category/create"
@page "/category/update/{Id:int}"   

@inject ICategoryRepository _categoryRepository
@inject NavigationManager NavigationManager
@inject IJSRuntime _JS

@if (IsProcessing)
{

    <div class="position-absolute w-75 h-75 d-flex flex-column align-items-center bg-white justify-content-center">
        <img src="/images/loading.gif" alt="loading" />
    </div>

}
else
{

    <div class="card shadow border-0 m-4">
        <div class="card-header bg-black bg-gradient ml-0 py-3">
            <div class="row">
                <div class="col-12 text-center">
                    <h2 class="text-white py-2">@(Id > 0 ? "Update" : "Create") Category</h2>"
                </div>
            </div>
        </div>
        <div class="card-body p-4">
            <EditForm Model="Category" FormName="CategoryUpsertForm" OnValidSubmit="UpsertCategory">
                <DataAnnotationsValidator />
                <ValidationSummary />

                <div class="border p-3 mt-4">
                    <div class="form-floating py-3 col-12">
                        <input type="text" class="form-control" id="Name" @bind="Category.Name" placeholder="Name" />
                        <label for="Name">Name</label>
                        <ValidationMessage For="@(() => Category.Name)" />
                    </div>
                    <div class="row mt-3">
                        <div class="col-6 col-md-3">
                            @if(Id > 0){
                                <button type="submit" class="btn btn-primary form-control" disabled="@IsProcessing" style="width:100%;">
                                    <i class='bi bi-floppy2'></i> Update
                                </button>
                            }else{
                                <button type="submit" class="btn btn-primary form-control" disabled="@IsProcessing" style="width:100%;">
                                    <i class="bi bi-plus-square"></i> Create
                                </button>
                            }
                        </div>
                        <div class="col-6 col-md-3">
                            <a href="category" class="btn btn-secondary form-control" disabled="@IsProcessing" style="width:100%;">
                                <i class="bi bi-arrow-bar-left"></i>Back to List
                            </a>
                        </div>
                    </div>
                </div>
            </EditForm>

        </div>
    </div>
}

@code {
    [Parameter]
    public int Id { get; set; } 

    [SupplyParameterFromForm]
    private Category Category { get; set; } = new Category();

    private bool IsProcessing { get; set; } = true;


    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await LoadCategory();
            IsProcessing = false;
            StateHasChanged();
        }
    }


    private async Task LoadCategory()
    {
        if (Id > 0)
        {
            Category = await _categoryRepository.GetAsync(Id);
        }
    }

    private async Task UpsertCategory()
    {
        IsProcessing = true;
        if (Category.Id == 0)
        {
            // Create Category
            await _categoryRepository.CreateAsync(Category);
            await _JS.ToastrSuccess("Category Create Successfully");
        }
        else
        {
            // Update Category
            await _categoryRepository.UpdateAsync(Category);
            await _JS.ToastrSuccess("Category UpDated Successfully");
        }

        IsProcessing = false;

        NavigationManager.NavigateTo("category");
    }
}
